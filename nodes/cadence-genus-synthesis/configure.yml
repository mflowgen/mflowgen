#=========================================================================
# Cadence Genus Synthesis
#=========================================================================
# Author : Alex Carsello, James Thomas
# Date   : July 14, 2020
#

name: cadence-genus-synthesis

#-------------------------------------------------------------------------
# Inputs and Outputs
#-------------------------------------------------------------------------

inputs:
  - adk
  - design.v
  - constraints.tcl

outputs:
  - design.v
  - design.sdc
  - design.sdf
  - design.spef
  - design.namemap

#-------------------------------------------------------------------------
# Commands
#-------------------------------------------------------------------------

commands:
  - genus -no_gui -f START.tcl -log logs/genus.log
  - mkdir -p outputs && cd outputs
  - ln -sf ../results_syn/syn_out.v design.v
  - ln -sf ../results_syn/syn_out._default_constraint_mode_.sdc design.sdc
  - ln -sf ../results_syn/syn_out.sdf design.sdf
  - ln -sf ../results_syn/syn_out.spef design.spef
  - ln -sf ../name_map.rpt design.namemap

#-------------------------------------------------------------------------
# Parameters
#-------------------------------------------------------------------------

parameters:
  design_name: undefined
  clock_period: 1.0
  # Automatic fine-grain clock gating
  gate_clock: True
  # Uniquify by prefixing every module in the design with the design name.
  # This is useful for hierarchical LVS when multiple blocks use modules
  # with the same name but different definitions.
  uniquify_with_design_name: True
  flatten_effort: 0
  read_hdl_defines: ""
  order:
    - designer-interface.tcl
    - setup-session.tcl
    - read-design.tcl
    - constraints.tcl
    - compile.tcl
    - generate-results.tcl

#-------------------------------------------------------------------------
# Debug
#-------------------------------------------------------------------------

debug:
  - genus -no_gui -f results_syn/syn_out.genus_setup.tcl

#-------------------------------------------------------------------------
# Assertions
#-------------------------------------------------------------------------

preconditions:

  - assert Tool( 'genus' )                   # tool check
  - assert File( 'inputs/adk' )              # must exist
  - assert File( 'inputs/design.v' )         # must exist
  - assert File( 'inputs/constraints.tcl' )  # must exist

postconditions:

  - assert File( 'outputs/design.v' )        # must exist
  - assert File( 'outputs/design.sdc' )      # must exist
  - assert File( 'outputs/design.sdf' )      # must exist
  - assert File( 'outputs/design.spef' )      # must exist

  # Basic error checking

  - assert 'Cannot resolve reference' not in File( 'logs/genus.log' )
  - assert 'Error   :' not in File( 'logs/genus.log' )

  # Sanity check that there is a clock in the constraints

  - assert 'create_clock' in File( 'outputs/design.sdc' )

